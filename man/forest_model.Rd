% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/forest_model.R
\name{forest_model}
\alias{forest_model}
\title{Produce a forest plot based on a regression model}
\usage{
forest_model(model, panels = default_forest_panels(), exponentiate = NULL,
  colour = "black", shape = 15, banded = TRUE, p_formatter = function(x)
  sprintf("\%0.3f", x))
}
\arguments{
\item{model}{regression model produced by `lm`, `glm`, `coxph`}

\item{panels}{`data.frame` with details of the panels that make up the plot (See Details)}

\item{exponentiate}{whether the numbers on the x scale should be exponentiated for plotting}

\item{colour}{colour of the point estimate and error bars}

\item{shape}{shape of the point estimate}

\item{banded}{whether to show light grey bands behind alternate rows}

\item{p_formatter}{function to format the p values for display}
}
\value{
a ggplot ready for display or saving
}
\description{
Produce a forest plot based on a regression model
}
\examples{
library("survival")
library("dplyr")
pretty_lung <- lung \%>\%
  transmute(time,
            status,
            Age = age,
            Sex = factor(sex, labels = c("Male", "Female")),
            ECOG = factor(lung$ph.ecog),
            `Meal Cal` = meal.cal)

print(forest_model(coxph(Surv(time, status) ~ ., pretty_lung)))

data_for_lm <- data_frame(x = rnorm(100, 4),
                          y = rnorm(100, 3, 0.5),
                          z = rnorm(100, 2, 2),
                          outcome = 3 * x - 2 * y + 4 * z + rnorm(100, 0, 0.1))

print(forest_model(lm(outcome ~ ., data_for_lm), default_forest_panels("Estimate")))

data_for_logistic <- data_for_lm \%>\% mutate(
  outcome = (0.5 * (x - 4) * (y - 3) * (z - 2) + rnorm(100, 0, 0.05)) > 0.5
)

print(forest_model(glm(outcome ~ ., binomial(), data_for_logistic),
  default_forest_panels("Odds ratio")))
}

